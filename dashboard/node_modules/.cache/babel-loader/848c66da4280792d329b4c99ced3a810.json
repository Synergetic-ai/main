{"ast":null,"code":"/*\n Highcharts JS v7.2.1 (2019-10-31)\n\n Exporting module\n\n (c) 2010-2019 Torstein Honsi\n\n License: www.highcharts.com/license\n*/\n(function (c) {\n  \"object\" === typeof module && module.exports ? (c[\"default\"] = c, module.exports = c) : \"function\" === typeof define && define.amd ? define(\"highcharts/modules/export-data\", [\"highcharts\", \"highcharts/modules/exporting\"], function (q) {\n    c(q);\n    c.Highcharts = q;\n    return c;\n  }) : c(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (c) {\n  function q(b, a, c, F) {\n    b.hasOwnProperty(a) || (b[a] = F.apply(null, c));\n  }\n\n  c = c ? c._modules : {};\n  q(c, \"mixins/ajax.js\", [c[\"parts/Globals.js\"], c[\"parts/Utilities.js\"]], function (b, a) {\n    var c = a.objectEach;\n\n    b.ajax = function (a) {\n      var h = b.merge(!0, {\n        url: !1,\n        type: \"get\",\n        dataType: \"json\",\n        success: !1,\n        error: !1,\n        data: !1,\n        headers: {}\n      }, a);\n      a = {\n        json: \"application/json\",\n        xml: \"application/xml\",\n        text: \"text/plain\",\n        octet: \"application/octet-stream\"\n      };\n      var f = new XMLHttpRequest();\n      if (!h.url) return !1;\n      f.open(h.type.toUpperCase(), h.url, !0);\n      h.headers[\"Content-Type\"] || f.setRequestHeader(\"Content-Type\", a[h.dataType] || a.text);\n      c(h.headers, function (a, b) {\n        f.setRequestHeader(b, a);\n      });\n\n      f.onreadystatechange = function () {\n        if (4 === f.readyState) {\n          if (200 === f.status) {\n            var a = f.responseText;\n            if (\"json\" === h.dataType) try {\n              a = JSON.parse(a);\n            } catch (n) {\n              h.error && h.error(f, n);\n              return;\n            }\n            return h.success && h.success(a);\n          }\n\n          h.error && h.error(f, f.responseText);\n        }\n      };\n\n      try {\n        h.data = JSON.stringify(h.data);\n      } catch (e) {}\n\n      f.send(h.data || !0);\n    };\n\n    b.getJSON = function (a, c) {\n      b.ajax({\n        url: a,\n        success: c,\n        dataType: \"json\",\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        }\n      });\n    };\n  });\n  q(c, \"mixins/download-url.js\", [c[\"parts/Globals.js\"]], function (b) {\n    var a = b.win,\n        c = a.navigator,\n        q = a.document,\n        h = a.URL || a.webkitURL || a,\n        f = /Edge\\/\\d+/.test(c.userAgent);\n\n    b.dataURLtoBlob = function (b) {\n      if ((b = b.match(/data:([^;]*)(;base64)?,([0-9A-Za-z+/]+)/)) && 3 < b.length && a.atob && a.ArrayBuffer && a.Uint8Array && a.Blob && h.createObjectURL) {\n        var c = a.atob(b[3]),\n            e = new a.ArrayBuffer(c.length);\n        e = new a.Uint8Array(e);\n\n        for (var d = 0; d < e.length; ++d) {\n          e[d] = c.charCodeAt(d);\n        }\n\n        b = new a.Blob([e], {\n          type: b[1]\n        });\n        return h.createObjectURL(b);\n      }\n    };\n\n    b.downloadURL = function (e, h) {\n      var p = q.createElement(\"a\");\n\n      if (\"string\" === typeof e || e instanceof String || !c.msSaveOrOpenBlob) {\n        if (f || 2E6 < e.length) if (e = b.dataURLtoBlob(e), !e) throw Error(\"Failed to convert to blob\");\n        if (void 0 !== p.download) p.href = e, p.download = h, q.body.appendChild(p), p.click(), q.body.removeChild(p);else try {\n          var d = a.open(e, \"chart\");\n          if (void 0 === d || null === d) throw Error(\"Failed to open window\");\n        } catch (A) {\n          a.location.href = e;\n        }\n      } else c.msSaveOrOpenBlob(e, h);\n    };\n  });\n  q(c, \"modules/export-data.src.js\", [c[\"parts/Globals.js\"], c[\"parts/Utilities.js\"]], function (b, a) {\n    function c(b, a) {\n      var c = n.navigator,\n          w = -1 < c.userAgent.indexOf(\"WebKit\") && 0 > c.userAgent.indexOf(\"Chrome\"),\n          l = n.URL || n.webkitURL || n;\n\n      try {\n        if (c.msSaveOrOpenBlob && n.MSBlobBuilder) {\n          var e = new n.MSBlobBuilder();\n          e.append(b);\n          return e.getBlob(\"image/svg+xml\");\n        }\n\n        if (!w) return l.createObjectURL(new n.Blob([\"\\uFEFF\" + b], {\n          type: a\n        }));\n      } catch (G) {}\n    }\n\n    var q = a.defined,\n        h = a.extend,\n        f = a.isObject,\n        e = a.pick,\n        n = b.win,\n        p = n.document,\n        d = b.seriesTypes,\n        A = b.downloadURL,\n        C = b.fireEvent;\n    b.setOptions({\n      exporting: {\n        csv: {\n          columnHeaderFormatter: null,\n          dateFormat: \"%Y-%m-%d %H:%M:%S\",\n          decimalPoint: null,\n          itemDelimiter: null,\n          lineDelimiter: \"\\n\"\n        },\n        showTable: !1,\n        useMultiLevelHeaders: !0,\n        useRowspanHeaders: !0\n      },\n      lang: {\n        downloadCSV: \"Download CSV\",\n        downloadXLS: \"Download XLS\",\n        openInCloud: \"Open in Highcharts Cloud\",\n        viewData: \"View data table\"\n      }\n    });\n    b.addEvent(b.Chart, \"render\", function () {\n      this.options && this.options.exporting && this.options.exporting.showTable && !this.options.chart.forExport && this.viewData();\n    });\n\n    b.Chart.prototype.setUpKeyToAxis = function () {\n      d.arearange && (d.arearange.prototype.keyToAxis = {\n        low: \"y\",\n        high: \"y\"\n      });\n      d.gantt && (d.gantt.prototype.keyToAxis = {\n        start: \"x\",\n        end: \"x\"\n      });\n    };\n\n    b.Chart.prototype.getDataRows = function (a) {\n      var c = this.hasParallelCoordinates,\n          h = this.time,\n          w = this.options.exporting && this.options.exporting.csv || {},\n          l = this.xAxis,\n          d = {},\n          f = [],\n          p = [],\n          n = [],\n          y,\n          z = function z(k, c, g) {\n        if (w.columnHeaderFormatter) {\n          var d = w.columnHeaderFormatter(k, c, g);\n          if (!1 !== d) return d;\n        }\n\n        return k ? k instanceof b.Axis ? k.options.title && k.options.title.text || (k.isDatetimeAxis ? \"DateTime\" : \"Category\") : a ? {\n          columnTitle: 1 < g ? c : k.name,\n          topLevelColumnTitle: k.name\n        } : k.name + (1 < g ? \" (\" + c + \")\" : \"\") : \"Category\";\n      },\n          D = function D(a, c, g) {\n        var k = {},\n            d = {};\n        c.forEach(function (c) {\n          var e = (a.keyToAxis && a.keyToAxis[c] || c) + \"Axis\";\n          e = b.isNumber(g) ? a.chart[e][g] : a[e];\n          k[c] = e && e.categories || [];\n          d[c] = e && e.isDatetimeAxis;\n        });\n        return {\n          categoryMap: k,\n          dateTimeValueAxisMap: d\n        };\n      },\n          g = [];\n\n      var u = 0;\n      this.setUpKeyToAxis();\n      this.series.forEach(function (k) {\n        var t = k.options.keys || k.pointArrayMap || [\"y\"],\n            r = t.length,\n            v = !k.requireSorting && {},\n            f = l.indexOf(k.xAxis),\n            B = D(k, t),\n            m;\n\n        if (!1 !== k.options.includeInDataExport && !k.options.isInternal && !1 !== k.visible) {\n          b.find(g, function (a) {\n            return a[0] === f;\n          }) || g.push([f, u]);\n\n          for (m = 0; m < r;) {\n            y = z(k, t[m], t.length), n.push(y.columnTitle || y), a && p.push(y.topLevelColumnTitle || y), m++;\n          }\n\n          var q = {\n            chart: k.chart,\n            autoIncrement: k.autoIncrement,\n            options: k.options,\n            pointArrayMap: k.pointArrayMap\n          };\n          k.options.data.forEach(function (a, b) {\n            c && (B = D(k, t, b));\n            var g = {\n              series: q\n            };\n            k.pointClass.prototype.applyOptions.apply(g, [a]);\n            a = g.x;\n            var l = k.data[b] && k.data[b].name;\n            m = 0;\n            k.xAxis && \"name\" !== k.exportKey || (a = l);\n            v && (v[a] && (a += \"|\" + b), v[a] = !0);\n            d[a] || (d[a] = [], d[a].xValues = []);\n            d[a].x = g.x;\n            d[a].name = l;\n\n            for (d[a].xValues[f] = g.x; m < r;) {\n              b = t[m], l = g[b], d[a][u + m] = e(B.categoryMap[b][l], B.dateTimeValueAxisMap[b] ? h.dateFormat(w.dateFormat, l) : null, l), m++;\n            }\n          });\n          u += m;\n        }\n      });\n\n      for (r in d) {\n        Object.hasOwnProperty.call(d, r) && f.push(d[r]);\n      }\n\n      var r = a ? [p, n] : [n];\n\n      for (u = g.length; u--;) {\n        var t = g[u][0];\n        var v = g[u][1];\n        var x = l[t];\n        f.sort(function (a, b) {\n          return a.xValues[t] - b.xValues[t];\n        });\n        var E = z(x);\n        r[0].splice(v, 0, E);\n        a && r[1] && r[1].splice(v, 0, E);\n        f.forEach(function (a) {\n          var b = a.name;\n          x && !q(b) && (x.isDatetimeAxis ? (a.x instanceof Date && (a.x = a.x.getTime()), b = h.dateFormat(w.dateFormat, a.x)) : b = x.categories ? e(x.names[a.x], x.categories[a.x], a.x) : a.x);\n          a.splice(v, 0, b);\n        });\n      }\n\n      r = r.concat(f);\n      C(this, \"exportData\", {\n        dataRows: r\n      });\n      return r;\n    };\n\n    b.Chart.prototype.getCSV = function (a) {\n      var b = \"\",\n          c = this.getDataRows(),\n          d = this.options.exporting.csv,\n          l = e(d.decimalPoint, \",\" !== d.itemDelimiter && a ? 1.1.toLocaleString()[1] : \".\"),\n          h = e(d.itemDelimiter, \",\" === l ? \";\" : \",\"),\n          f = d.lineDelimiter;\n      c.forEach(function (a, d) {\n        for (var e, m = a.length; m--;) {\n          e = a[m], \"string\" === typeof e && (e = '\"' + e + '\"'), \"number\" === typeof e && \".\" !== l && (e = e.toString().replace(\".\", l)), a[m] = e;\n        }\n\n        b += a.join(h);\n        d < c.length - 1 && (b += f);\n      });\n      return b;\n    };\n\n    b.Chart.prototype.getTable = function (a) {\n      var b = '<table id=\"highcharts-data-table-' + this.index + '\">',\n          c = this.options,\n          d = a ? 1.1.toLocaleString()[1] : \".\",\n          h = e(c.exporting.useMultiLevelHeaders, !0);\n      a = this.getDataRows(h);\n\n      var f = 0,\n          l = h ? a.shift() : null,\n          q = a.shift(),\n          n = function n(a, b, c, h) {\n        var g = e(h, \"\");\n        b = \"text\" + (b ? \" \" + b : \"\");\n        \"number\" === typeof g ? (g = g.toString(), \",\" === d && (g = g.replace(\".\", d)), b = \"number\") : h || (b = \"empty\");\n        return \"<\" + a + (c ? \" \" + c : \"\") + ' class=\"' + b + '\">' + g + \"</\" + a + \">\";\n      };\n\n      !1 !== c.exporting.tableCaption && (b += '<caption class=\"highcharts-table-caption\">' + e(c.exporting.tableCaption, c.title.text ? c.title.text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\").replace(/\\//g, \"&#x2F;\") : \"Chart\") + \"</caption>\");\n\n      for (var p = 0, z = a.length; p < z; ++p) {\n        a[p].length > f && (f = a[p].length);\n      }\n\n      b += function (a, b, e) {\n        var d = \"<thead>\",\n            f = 0;\n        e = e || b && b.length;\n        var g,\n            l = 0;\n\n        if (g = h && a && b) {\n          a: if (g = a.length, b.length === g) {\n            for (; g--;) {\n              if (a[g] !== b[g]) {\n                g = !1;\n                break a;\n              }\n            }\n\n            g = !0;\n          } else g = !1;\n\n          g = !g;\n        }\n\n        if (g) {\n          for (d += \"<tr>\"; f < e; ++f) {\n            g = a[f];\n            var m = a[f + 1];\n            g === m ? ++l : l ? (d += n(\"th\", \"highcharts-table-topheading\", 'scope=\"col\" colspan=\"' + (l + 1) + '\"', g), l = 0) : (g === b[f] ? c.exporting.useRowspanHeaders ? (m = 2, delete b[f]) : (m = 1, b[f] = \"\") : m = 1, d += n(\"th\", \"highcharts-table-topheading\", 'scope=\"col\"' + (1 < m ? ' valign=\"top\" rowspan=\"' + m + '\"' : \"\"), g));\n          }\n\n          d += \"</tr>\";\n        }\n\n        if (b) {\n          d += \"<tr>\";\n          f = 0;\n\n          for (e = b.length; f < e; ++f) {\n            void 0 !== b[f] && (d += n(\"th\", null, 'scope=\"col\"', b[f]));\n          }\n\n          d += \"</tr>\";\n        }\n\n        return d + \"</thead>\";\n      }(l, q, Math.max(f, q.length));\n\n      b += \"<tbody>\";\n      a.forEach(function (a) {\n        b += \"<tr>\";\n\n        for (var c = 0; c < f; c++) {\n          b += n(c ? \"td\" : \"th\", null, c ? \"\" : 'scope=\"row\"', a[c]);\n        }\n\n        b += \"</tr>\";\n      });\n      b += \"</tbody></table>\";\n      a = {\n        html: b\n      };\n      C(this, \"afterGetTable\", a);\n      return a.html;\n    };\n\n    b.Chart.prototype.downloadCSV = function () {\n      var a = this.getCSV(!0);\n      A(c(a, \"text/csv\") || \"data:text/csv,\\uFEFF\" + encodeURIComponent(a), this.getFilename() + \".csv\");\n    };\n\n    b.Chart.prototype.downloadXLS = function () {\n      var a = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head>\\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>Ark1</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\\x3e<style>td{border:none;font-family: Calibri, sans-serif;} .number{mso-number-format:\"0.00\";} .text{ mso-number-format:\"@\";}</style><meta name=ProgId content=Excel.Sheet><meta charset=UTF-8></head><body>' + this.getTable(!0) + \"</body></html>\";\n      A(c(a, \"application/vnd.ms-excel\") || \"data:application/vnd.ms-excel;base64,\" + n.btoa(unescape(encodeURIComponent(a))), this.getFilename() + \".xls\");\n    };\n\n    b.Chart.prototype.viewData = function () {\n      this.dataTableDiv || (this.dataTableDiv = p.createElement(\"div\"), this.dataTableDiv.className = \"highcharts-data-table\", this.renderTo.parentNode.insertBefore(this.dataTableDiv, this.renderTo.nextSibling));\n      this.dataTableDiv.innerHTML = this.getTable();\n      C(this, \"afterViewData\", this.dataTableDiv);\n    };\n\n    b.Chart.prototype.openInCloud = function () {\n      function a(b) {\n        Object.keys(b).forEach(function (c) {\n          \"function\" === typeof b[c] && delete b[c];\n          f(b[c]) && a(b[c]);\n        });\n      }\n\n      var c = b.merge(this.userOptions);\n      a(c);\n      c = {\n        name: c.title && c.title.text || \"Chart title\",\n        options: c,\n        settings: {\n          constructor: \"Chart\",\n          dataProvider: {\n            csv: this.getCSV()\n          }\n        }\n      };\n      var d = JSON.stringify(c);\n\n      (function () {\n        var a = p.createElement(\"form\");\n        p.body.appendChild(a);\n        a.method = \"post\";\n        a.action = \"https://cloud-api.highcharts.com/openincloud\";\n        a.target = \"_blank\";\n        var b = p.createElement(\"input\");\n        b.type = \"hidden\";\n        b.name = \"chart\";\n        b.value = d;\n        a.appendChild(b);\n        a.submit();\n        p.body.removeChild(a);\n      })();\n    };\n\n    if (a = b.getOptions().exporting) h(a.menuItemDefinitions, {\n      downloadCSV: {\n        textKey: \"downloadCSV\",\n        onclick: function onclick() {\n          this.downloadCSV();\n        }\n      },\n      downloadXLS: {\n        textKey: \"downloadXLS\",\n        onclick: function onclick() {\n          this.downloadXLS();\n        }\n      },\n      viewData: {\n        textKey: \"viewData\",\n        onclick: function onclick() {\n          this.viewData();\n        }\n      },\n      openInCloud: {\n        textKey: \"openInCloud\",\n        onclick: function onclick() {\n          this.openInCloud();\n        }\n      }\n    }), a.buttons && a.buttons.contextButton.menuItems.push(\"separator\", \"downloadCSV\", \"downloadXLS\", \"viewData\", \"openInCloud\");\n    d.map && (d.map.prototype.exportKey = \"name\");\n    d.mapbubble && (d.mapbubble.prototype.exportKey = \"name\");\n    d.treemap && (d.treemap.prototype.exportKey = \"name\");\n  });\n  q(c, \"masters/modules/export-data.src.js\", [], function () {});\n});","map":null,"metadata":{},"sourceType":"script"}